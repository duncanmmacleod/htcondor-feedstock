From 34611a9cb2f211cdf060ba881e5e88a19c7b4c7c Mon Sep 17 00:00:00 2001
From: Jaime Frey <jfrey@cs.wisc.edu>
Date: Thu, 12 Nov 2020 15:47:04 -0600
Subject: [PATCH] Allow prestaging of open/libressl include files on macOS.

If the tarball of openssl or libressl header files exists in the source
tree, don't pull it from parrot.cs.wisc.edu. This allows the build to be
more self-contained.
---
 externals/bundles/openssl/1.0.1e/CMakeLists.txt | 17 +++++++++++++----
 1 file changed, 13 insertions(+), 4 deletions(-)

diff --git a/externals/bundles/openssl/1.0.1e/CMakeLists.txt b/externals/bundles/openssl/1.0.1e/CMakeLists.txt
index 37201cc3f3..5380665687 100644
--- a/externals/bundles/openssl/1.0.1e/CMakeLists.txt
+++ b/externals/bundles/openssl/1.0.1e/CMakeLists.txt
@@ -72,16 +72,25 @@ if (WITH_OPENSSL)
 			exec_program (sw_vers ARGS -productVersion OUTPUT_VARIABLE TEST_VER)
 			if (${TEST_VER} MATCHES "10.1[1-2]" )
 				if ( NOT EXISTS ${CMAKE_CURRENT_BINARY_DIR}/openssl-darwin )
-					exec_program( curl ${CMAKE_CURRENT_BINARY_DIR} ARGS -O ${EXTERNALS_SOURCE_URL}/openssl-darwin.tar.gz )
-					exec_program( tar ${CMAKE_CURRENT_BINARY_DIR} ARGS xvf openssl-darwin.tar.gz )
+					if ( EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/openssl-darwin.tar.gz )
+						exec_program( tar ${CMAKE_CURRENT_SOURCE_DIR} ARGS xvf openssl-darwin.tar.gz )
+					else()
+						exec_program( curl ${CMAKE_CURRENT_BINARY_DIR} ARGS -O ${EXTERNALS_SOURCE_URL}/openssl-darwin.tar.gz )
+						exec_program( tar ${CMAKE_CURRENT_BINARY_DIR} ARGS xvf openssl-darwin.tar.gz )
+					endif()
 				endif()
 				set( DARWIN_OPENSSL_INCLUDE "${CMAKE_CURRENT_BINARY_DIR}/openssl-darwin/include" )
 				set( DARWIN_OPENSSL_LIB_DIR "${CMAKE_CURRENT_BINARY_DIR}/openssl-darwin/lib" )
 				set(BUILDING_OPENSSL ON PARENT_SCOPE)
 			elseif (${TEST_VER} MATCHES "10.1[3-9]" )
 				if ( NOT EXISTS ${CMAKE_CURRENT_BINARY_DIR}/libressl-2.2.7 )
-					exec_program( curl ${CMAKE_CURRENT_BINARY_DIR} ARGS -O ${EXTERNALS_SOURCE_URL}/libressl-2.2.7.tar.gz )
-					exec_program( tar ${CMAKE_CURRENT_BINARY_DIR} ARGS xvf libressl-2.2.7.tar.gz libressl-2.2.7/include )
+					if ( EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/libressl-2.2.7.tar.gz )
+						message (STATUS "JEF using tarball in source dir")
+						exec_program( tar ${CMAKE_CURRENT_BINARY_DIR} ARGS xvf ${CMAKE_CURRENT_SOURCE_DIR}/libressl-2.2.7.tar.gz libressl-2.2.7/include )
+					else()
+						exec_program( curl ${CMAKE_CURRENT_BINARY_DIR} ARGS -O ${EXTERNALS_SOURCE_URL}/libressl-2.2.7.tar.gz )
+						exec_program( tar ${CMAKE_CURRENT_BINARY_DIR} ARGS xvf libressl-2.2.7.tar.gz libressl-2.2.7/include )
+					endif()
 					exec_program( mkdir ${CMAKE_CURRENT_BINARY_DIR} ARGS libressl-2.2.7/lib )
 					exec_program( ln ${CMAKE_CURRENT_BINARY_DIR} ARGS -s /usr/lib/libcrypto.35.dylib libressl-2.2.7/lib/libcrypto.dylib )
 					exec_program( ln ${CMAKE_CURRENT_BINARY_DIR} ARGS -s /usr/lib/libssl.35.dylib libressl-2.2.7/lib/libssl.dylib )
