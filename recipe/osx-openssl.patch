diff --git a/externals/bundles/openssl/1.0.1e/CMakeLists.txt b/externals/bundles/openssl/1.0.1e/CMakeLists.txt
index 2546fefa87..9f4b88445c 100644
--- a/externals/bundles/openssl/1.0.1e/CMakeLists.txt
+++ b/externals/bundles/openssl/1.0.1e/CMakeLists.txt
@@ -68,65 +68,8 @@ if (WITH_OPENSSL)
 
 	else()
 
-		if ( DARWIN )
-			exec_program (sw_vers ARGS -productVersion OUTPUT_VARIABLE TEST_VER)
-			if (${TEST_VER} MATCHES "10.1[1-2]" )
-				if ( NOT EXISTS ${CMAKE_CURRENT_BINARY_DIR}/openssl-darwin )
-					if ( EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/openssl-darwin.tar.gz )
-						exec_program( tar ${CMAKE_CURRENT_SOURCE_DIR} ARGS xvf openssl-darwin.tar.gz )
-					else()
-						exec_program( curl ${CMAKE_CURRENT_BINARY_DIR} ARGS -O ${EXTERNALS_SOURCE_URL}/openssl-darwin.tar.gz )
-						exec_program( tar ${CMAKE_CURRENT_BINARY_DIR} ARGS xvf openssl-darwin.tar.gz )
-					endif()
-				endif()
-				set( DARWIN_OPENSSL_INCLUDE "${CMAKE_CURRENT_BINARY_DIR}/openssl-darwin/include" )
-				set( DARWIN_OPENSSL_LIB_DIR "${CMAKE_CURRENT_BINARY_DIR}/openssl-darwin/lib" )
-				set(BUILDING_OPENSSL ON PARENT_SCOPE)
-			elseif (${TEST_VER} MATCHES "10.1[3-9]" )
-				if ( NOT EXISTS ${CMAKE_CURRENT_BINARY_DIR}/libressl-2.2.7 )
-					if ( EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/libressl-2.2.7.tar.gz )
-						message (STATUS "JEF using tarball in source dir")
-						exec_program( tar ${CMAKE_CURRENT_BINARY_DIR} ARGS xvf ${CMAKE_CURRENT_SOURCE_DIR}/libressl-2.2.7.tar.gz libressl-2.2.7/include )
-					else()
-						exec_program( curl ${CMAKE_CURRENT_BINARY_DIR} ARGS -O ${EXTERNALS_SOURCE_URL}/libressl-2.2.7.tar.gz )
-						exec_program( tar ${CMAKE_CURRENT_BINARY_DIR} ARGS xvf libressl-2.2.7.tar.gz libressl-2.2.7/include )
-					endif()
-					exec_program( mkdir ${CMAKE_CURRENT_BINARY_DIR} ARGS libressl-2.2.7/lib )
-					exec_program( ln ${CMAKE_CURRENT_BINARY_DIR} ARGS -s /usr/lib/libcrypto.35.dylib libressl-2.2.7/lib/libcrypto.dylib )
-					exec_program( ln ${CMAKE_CURRENT_BINARY_DIR} ARGS -s /usr/lib/libssl.35.dylib libressl-2.2.7/lib/libssl.dylib )
-				endif()
-				set( DARWIN_OPENSSL_INCLUDE "${CMAKE_CURRENT_BINARY_DIR}/libressl-2.2.7/include" )
-				set( DARWIN_OPENSSL_LIB_DIR "${CMAKE_CURRENT_BINARY_DIR}/libressl-2.2.7/lib" )
-				set(BUILDING_OPENSSL ON PARENT_SCOPE)
-			elseif (${TEST_VER} MATCHES "11.[1-9]")
-				if ( NOT EXISTS ${CMAKE_CURRENT_BINARY_DIR}/libressl-2.2.7 )
-					if ( EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/libressl-2.2.7.tar.gz )
-						exec_program( tar ${CMAKE_CURRENT_BINARY_DIR} ARGS xvf ${CMAKE_CURRENT_SOURCE_DIR}/libressl-2.2.7.tar.gz libressl-2.2.7/include )
-					else()
-						exec_program( curl ${CMAKE_CURRENT_BINARY_DIR} ARGS -O ${EXTERNALS_SOURCE_URL}/libressl-2.2.7.tar.gz )
-						exec_program( tar ${CMAKE_CURRENT_BINARY_DIR} ARGS xvf libressl-2.2.7.tar.gz libressl-2.2.7/include )
-					endif()
-					if ( EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/libressl_libs-2.2.7.tar.gz )
-						exec_program( tar ${CMAKE_CURRENT_BINARY_DIR} ARGS xvf ${CMAKE_CURRENT_SOURCE_DIR}/libressl_libs-2.2.7.tar.gz )
-					else()
-						exec_program( curl ${CMAKE_CURRENT_BINARY_DIR} ARGS -O ${EXTERNALS_SOURCE_URL}/libressl_libs-2.2.7.tar.gz )
-						exec_program( tar ${CMAKE_CURRENT_BINARY_DIR} ARGS xvf libressl_libs-2.2.7.tar.gz )
-					endif()
-				endif()
-				set( DARWIN_OPENSSL_INCLUDE "${CMAKE_CURRENT_BINARY_DIR}/libressl-2.2.7/include" )
-				set( DARWIN_OPENSSL_LIB_DIR "${CMAKE_CURRENT_BINARY_DIR}/libressl-2.2.7/lib" )
-				set(BUILDING_OPENSSL ON PARENT_SCOPE)
-			else()
-				set( DARWIN_OPENSSL_INCLUDE /usr/include )
-				set( DARWIN_OPENSSL_LIB_DIR /usr/lib )
-			endif()
-
-			set( LIBSSL_FOUND "${DARWIN_OPENSSL_LIB_DIR}/libssl.dylib" )
-			set( LIBCRYPTO_FOUND "${DARWIN_OPENSSL_LIB_DIR}/libcrypto.dylib" )
-		else()
-			find_library( LIBSSL_FOUND "ssl" )
-			find_library( LIBCRYPTO_FOUND "crypto" )
-		endif()
+		find_library( LIBSSL_FOUND "ssl" )
+		find_library( LIBCRYPTO_FOUND "crypto" )
 
 		set( OPENSSL_FOUND "${LIBSSL_FOUND};${LIBCRYPTO_FOUND}" )
 
